{
  "name": "is-type-of",
  "version": "0.2.1",
  "description": "complete type checking for node",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/is-type-of.git"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "typeof",
    "checker",
    "type",
    "is"
  ],
  "author": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/node-modules/is-type-of/issues"
  },
  "homepage": "https://github.com/node-modules/is-type-of",
  "devDependencies": {
    "autod": "^0.1.1",
    "contributors": "*",
    "istanbul-harmony": "*",
    "long": "1.1.2",
    "mocha": "^1.17.1",
    "should": "3.3.1"
  },
  "dependencies": {
    "core-util-is": "^1.0.1",
    "isstream": "^0.1.0"
  },
  "readme": "is-type-of\n==========\n\ncomplete type checking for node, extend [core-util-is](https://github.com/isaacs/core-util-is)\n\ndependencies:\n\n- [core-util-is](https://github.com/isaacs/core-util-is)\n- [is-stream](https://github.com/rvagg/isstream)\n\n## Install\n\n```\nnpm install is-type-of\n```\n\n## Example\n\n```\nvar is = require('is-type-of');\n\nis.array([1]); // => true\nis.primitive(true); // => true\nis.primitive({}); // => false\nis.generatorFunction(function * () {}); // => true\nis.long(Math.pow(2, 33)); // => true\nis.double(0); // => false\n```\n\n## API\n\n### From [core-util-is](https://github.com/isaacs/core-util-is)\n\n#### is.array(arr)\n\n#### is.boolean(bool)\n\n#### is.null(null)\n\n#### is.nullOrUndefined(null)\n\n#### is.number(num)\n\n#### is.string(str)\n\n#### is.symbol(sym)\n\n#### is.undefined(undef)\n\n#### is.regExp(reg)\n\n#### is.object(obj)\n\n#### is.date(date)\n\n#### is.error(err)\n\n#### is.function(fn)\n\n#### is.primitive(prim)\n\n#### is.buffer(buf)\n\n### from [is-stream](https://github.com/rvagg/isstream)\n\n#### is.stream(stream)\n\n#### is.readableStream(readable)\n\n#### is.writableStream(writable)\n\n#### is.duplexStream(duplex)\n\n### Extend API\n\n#### is.NaN(NaN)\n\n#### is.generator(gen)\n\n#### is.generatorFunction(fn)\n\n#### is.promise(fn)\n\n#### is.int(int)\n\n#### is.double(double)\n\n#### is.int32(int)\n\n#### is.long(long)\n\n* Support [Long](https://github.com/dcodeIO/Long.js) instance.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "is-type-of@0.2.1",
  "_from": "is-type-of@^0.2.1"
}
